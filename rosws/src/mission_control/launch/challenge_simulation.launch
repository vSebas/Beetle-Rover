<launch>
  <arg name="cmd_topic"       default="base_footprint/cmd_vel" />
  <arg name="odom_frame_id"   default="world"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="world"/>
  <arg name="obstacle_topic"  default="/obstacles" />

  <node name="turtlesim_ext" pkg="turtlesim" type="turtlesim_node" output="screen" respawn="false" />
  <node pkg="rosservice" type="rosservice" name="clear_bg" args="call --wait /kill 'turtle1'" />

  <node name="sumro_challenge_simulation" pkg="mission_control" type="challenge_simulation.py" output="screen" respawn="false">
    <param name="global_frame_id" value="$(arg global_frame_id)"/>
  </node>

  <!--
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find turtlesim_sumro)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlesim_sumro)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find turtlesim_sumro)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find turtlesim_sumro)/param/global_costmap_params.yaml" command="load" />
 
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="global_costmap/obstacle_layer/point_cloud_sensor/topic" value="$(arg obstacle_topic)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/obstacle_layer/point_cloud_sensor/topic" value="$(arg obstacle_topic)"/>
   
    <remap from="cmd_vel" to="/base_footprint/cmd_vel"/>
  </node>
  -->

</launch>

